# because apple:
if [[ `uname` == "Darwin" ]]; then
    alias gdb='sudo gdb'
fi

# Python Virtualenvs
venv_utils () {
    # We use 'venv.nosync' to make icloud ignore it, then the symlink is used to
    # 'remove' the '.' from the name so that pylint from Atom can see it
    virtualenv -p python$1 venv.nosync
    source ./venv.nosync/bin/activate
    pip install pylint
    ln -s venv.nosync venv
}

conda_utils () {
    # We use venv.nosync to make icloud ignore it, then the symlink is used to
    # 'remove' the '.' from the name so that pylint from Atom can see it
    conda create -n venv.nosync python=$1 anaconda
    source activate venv.nosync
    conda install -n venv.nosync pylint
    ln -s  /Users/daniellombardi/anaconda3/envs/venv.nosync venv
}

create_from_template () {
    cp ${HOME}/dotfiles/TEMPLATES/${1}/* .
    ls
}

start_OS_dev_envDEPRECATED () {

    docker ps > /dev/null 2>&1
    if [ $? -eq 1 ]; then
        echo "Launching Docker..."
        # open -a docker
        colima start > /dev/null 2>&1

        docker ps > /dev/null 2>&1
        while [ $? -eq 1 ]
        do
            sleep 1
            docker ps > /dev/null 2>&1
        done
    fi

    docker run --rm -it -v $(pwd):/usr/src gcc:latest # "cd /usr/src && ls"
}

start_OS_dev_env () {

    docker ps > /dev/null 2>&1
    if [ $? -eq 1 ]; then
        colima start
    fi

    docker run --rm -it -v $(pwd):/usr/src gcc:latest

    echo "\nDon't forget to run 'colima stop' if you're done using containers."
    # colima stop
}

# python venvs
alias mkconda=conda_utils '3.7'
alias mkconda3.7=conda_utils '3.7'
alias mkconda3.8=conda_utils '3.8'
alias mkconda3.9=conda_utils '3.9'

alias mkvenv3.7=venv_utils '3.7'
alias mkvenv3.8=venv_utils '3.8'
alias mkvenv3.9=venv_utils '3.9'
alias mkvenv=venv_utils

alias activenv='source ./venv.nosync/bin/activate'
alias acticonda='source ~/anaconda3/envs/venv.nosync/bin/activate'

alias condadel='conda remove -n venv.nosync -all'


# school work templates
alias mkcpp=create_from_template 'CPP'
alias mkc=create_from_template 'C'


# docker and SO
alias here=start_OS_dev_env
